/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Exploiter,
  ExploiterInterface,
} from "../../../contracts/ExploitGas.sol/Exploiter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_toobins",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b506040516104d43803806104d4833981810160405281019061003291906100cf565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050506100fc565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061009c82610071565b9050919050565b6100ac81610091565b81146100b757600080fd5b50565b6000815190506100c9816100a3565b92915050565b6000602082840312156100e5576100e461006c565b5b60006100f3848285016100ba565b91505092915050565b6080516103be6101166000396000606401526103be6000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063150b7a0214610030575b600080fd5b61004a60048036038101906100459190610233565b610060565b60405161005791906102f6565b60405180910390f35b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415806100bd5750600084145b156100d15763150b7a0260e01b9050610127565b60005b6109c481101561011b57600060019080600181540180825580915050600190039060005260206000200160009091909190915055808061011390610340565b9150506100d4565b5063150b7a0260e01b90505b95945050505050565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101658261013a565b9050919050565b6101758161015a565b811461018057600080fd5b50565b6000813590506101928161016c565b92915050565b6000819050919050565b6101ab81610198565b81146101b657600080fd5b50565b6000813590506101c8816101a2565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126101f3576101f26101ce565b5b8235905067ffffffffffffffff8111156102105761020f6101d3565b5b60208301915083600182028301111561022c5761022b6101d8565b5b9250929050565b60008060008060006080868803121561024f5761024e610130565b5b600061025d88828901610183565b955050602061026e88828901610183565b945050604061027f888289016101b9565b935050606086013567ffffffffffffffff8111156102a05761029f610135565b5b6102ac888289016101dd565b92509250509295509295909350565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6102f0816102bb565b82525050565b600060208201905061030b60008301846102e7565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061034b82610198565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361037d5761037c610311565b5b60018201905091905056fea2646970667358221220d4c31f701cc5e222563d36b8b608b18f678b688a839bedcd88835568ff2a70f964736f6c63430008130033";

type ExploiterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ExploiterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Exploiter__factory extends ContractFactory {
  constructor(...args: ExploiterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _toobins: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Exploiter> {
    return super.deploy(_toobins, overrides || {}) as Promise<Exploiter>;
  }
  override getDeployTransaction(
    _toobins: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_toobins, overrides || {});
  }
  override attach(address: string): Exploiter {
    return super.attach(address) as Exploiter;
  }
  override connect(signer: Signer): Exploiter__factory {
    return super.connect(signer) as Exploiter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ExploiterInterface {
    return new utils.Interface(_abi) as ExploiterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Exploiter {
    return new Contract(address, _abi, signerOrProvider) as Exploiter;
  }
}
